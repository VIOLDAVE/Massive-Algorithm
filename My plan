My plan

Objective:
The goal of  Market basket analysis is to implement a system that identifies frequent itemsets, applying classic market-basket analysis techniques. The system must be able to extract and analyze patterns of co-occurrence within user behaviors or text content in the Amazon Books Review dataset.

Dataset Used:

Source: Amazon Books Review dataset (available on Kaggle under CC0 license)
Main File: Books_rating.csv
The dataset should be accessed using the Kaggle API during code execution, with proper handling of credentials.
Two Basket Definition Approaches (choose one or explore both):

Text-Based Basket:
Each review is considered a "basket."
Items are the individual words in the review/text column.
Frequent word co-occurrences across reviews are extracted.
User-Based Basket:
Each user is treated as a basket.
Items are the books they reviewed.
The goal is to find books that are frequently reviewed together by the same users.
Expected Output:

Discovery of frequent itemsets using algorithms like Apriori or FP-Growth.
Clear presentation of results showing top itemsets with their support values.
Optionally: generate association rules with confidence and lift.
Requirements and Guidelines:

The project must scale to large data: subsampling is allowed during development, but scalability should be demonstrated in the report.
Implemented in Python 3, preferably in a Jupyter notebook runnable on Google Colab.
Code and a written LaTeX report must be submitted via GitHub (public repository).
A badge or link to Colab execution should be included in the repository.
The project can be done individually or in pairs.
Preprocessing steps such as tokenization (for text) or user-book aggregation (for user-based analysis) must be clearly explained.
Report Must Include:

Dataset scope and filtering approach.
Data organization strategy.
Description of preprocessing methods (e.g., stopword removal, normalization).
Algorithms used and rationale for selection.
Experiments on various support thresholds.
Performance discussion and scalability considerations.
Insights derived from frequent itemsets.
Mandatory academic integrity statement.






